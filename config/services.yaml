# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    locales: ['en', 'fr', 'es', 'de']

services:

    # Fix until doctrine 3.0 ...
    custom_doctrine_orm_naming_strategy_underscore:
        class: Doctrine\ORM\Mapping\UnderscoreNamingStrategy
        arguments: [0, true]

    session.namespacedattributebag:
        class: Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.google_translate:
        class: Stichoza\GoogleTranslate\GoogleTranslate

    App\Twig\Extension\GlobalExtension:
        tags: ['twig.extension']
        arguments:
            $shopSettings: '%shop_settings%'

    App\Service\GoogleTranslator:
        arguments:
            $translator: '@app.google_translate'
            $request: '@request_stack'
            $manager: '@doctrine.orm.entity_manager'
            $projectDir: '%kernel.project_dir%'

    App\Service\ImageLoader:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $requestStack: '@request_stack'

    App\Service\GiftManager:
        arguments:
            $manager: '@doctrine.orm.entity_manager'

    Liip\ImagineBundle\Imagine\Cache\CacheManager:
        alias: 'liip_imagine.cache.manager'

    Liip\ImagineBundle\Service\FilterService:
        alias: 'liip_imagine.service.filter'

    App\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
        arguments:
            $manager: '@doctrine.orm.entity_manager'

    item_converter:
        class: App\Request\ParamConverter\ItemConverter
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: request.param_converter, priority: 1, converter: item_converter }

    blog_article_converter:
        class: App\Request\ParamConverter\BlogArticleConverter
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: request.param_converter, priority: 1, converter: blog_article_converter }
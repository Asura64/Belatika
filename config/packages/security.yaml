security:
    encoders:
#        FOS\UserBundle\Model\UserInterface: bcrypt
        App\Entity\User:
            algorithm: auto


    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
#        fos_userbundle:
#            id: fos_user.user_provider.username_email
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: app_user_provider
                login_path: app_login
#                check_path: app_check
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_logout
            anonymous: true
            lazy: true
#            logout_on_user_change: true
            guard:
                authenticators:
                    - App\Security\Authenticator\SocialAuthenticator
                    - App\Security\LoginFormAuthenticator
                entry_point: App\Security\LoginFormAuthenticator

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/user, role: IS_AUTHENTICATED_FULLY, requires_channel: https }
        - { path: ^/admin/, role: ROLE_ADMIN, requires_channel: https }
        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
